extern crate serde;
extern crate serde_json;

use serde_json::{Value, Map};

#[derive(Debug)]
#[derive(Serialize, Deserialize)]
pub struct T3 {
    total_awards_received: u32,
    approved_at_utc: Option<String>,
    ups: u32,
    mod_reason_by: Option<String>,
    banned_by: Option<String>,
    author_flair_type: Option<String>,
    removal_reason: Option<String>,
    author_flair_template_id: Option<String>,
    likes: Option<u32>,
    no_follow: bool,
    user_reports: Vec<String>,
    saved: bool,
    id: String,
    banned_at_utc: Option<u32>,
    mod_reason_title: Option<String>,
    gilded: u32,
    archived: bool,
    report_reasons: Option<String>,
    author: String,
    can_mod_post: bool,
    send_replies: bool,
    score: u32,
    author_fullname: String,
    approved_by: Option<String>,
    // TODO: Define strongly typed serde struct for all_awardings
    all_awardings: Value,
    subreddit_id: String,
    // edited: bool,
    author_flair_css_class: Option<String>,
    downs: u32,
    author_flair_richtext: Vec<String>,
    author_patreon_flair: bool,
    stickied: bool,
    subreddit_type: String,
    can_gild: bool,
    gildings: Map<String, Value>,
    author_flair_text_color: Option<String>,
    permalink: String,
    num_reports: Option<i32>,
    locked: bool,
    name: String,
    created: u32,
    subreddit: String,
    author_flair_text: Option<String>,
    created_utc: u32,
    subreddit_name_prefixed: String,
    author_flair_background_color: Option<String>,
    mod_reports: Vec<String>,
    mod_note: Option<String>,
    distinguished: Option<String>,
    clicked: bool,
    selftext: String,
    link_flair_type: String,
    over_18: bool,
    is_self: bool,
    parent_whitelist_status: String,
    spoiler: bool,
    link_flair_text_color: String,
    is_reddit_media_domain: bool,
    link_flair_text: Option<String>,
    whitelist_status: String,
    link_flair_background_color: String,
    is_meta: bool,
    thumbnail: String,
    content_categories: Option<String>,
    title: String,
    link_flair_richtext: Vec<String>,
    is_robot_indexable: bool,
    pwls: u32,
    suggested_sort: Option<String>,
    visited: bool,
    hide_score: bool,
    num_comments: u32,
    url: String,
    media: Option<String>,    
    category: Option<String>,
    discussion_type: Option<String>,
    wls: u32,
    is_original_content: bool,
    secure_media: Option<String>,
    subreddit_subscribers: u32,
    quarantine: bool,
    secure_media_embed: Value,
    hidden: bool,
    media_only: bool,
    pinned: bool,
    view_count: Option<String>,
    selftext_html: Option<String>,
    allow_live_comments: bool,
    media_embed: Value,
    num_crossposts: u32,
    is_crosspostable: bool,
    is_video: bool,
    domain: String,
    contest_mode: bool,
    link_flair_css_class: Option<String>,
    
}
